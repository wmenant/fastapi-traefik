apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: postgres-data
  name: {{ .Release.Namespace }}-postgres-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: {{ .Release.Namespace }}-db
  name: {{ .Release.Namespace }}-db
spec:
  replicas: {{ .Values.db.replicaCount }}
  selector:
    matchLabels:
      io.kompose.service: {{ .Release.Namespace }}-db
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: {{ .Release.Namespace }}-db
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: {{ .Values.db.env.POSTGRES_DB }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.db.env.POSTGRES_PASSWORD }}
            - name: POSTGRES_USER
              value: {{ .Values.db.env.POSTGRES_USER}}
            - name: PGDATA
              value: "/var/lib/postgresql/data/some_name/"

          image: {{ .Values.db.image.repository}}
          name: {{ .Release.Namespace }}-db
          ports:
            - containerPort: {{ .Values.db.service.port}}
              protocol: TCP
          volumeMounts:
            - mountPath: {{ .Values.db.volume.mountPath}}
              name: {{ .Release.Namespace }}-postgres-data
      restartPolicy: {{ .Values.db.image.pullPolicy}}
      volumes:
        - name: {{ .Release.Namespace }}-postgres-data
          persistentVolumeClaim:
            claimName: {{ .Release.Namespace }}-postgres-data
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: {{ .Release.Namespace }}-db
  name: {{ .Release.Namespace }}-db
spec:
  type: {{ .Values.db.service.type}}

  ports:
    - name: "{{ .Values.db.service.port}}"
      port: {{ .Values.db.service.port}}
      targetPort: {{ .Values.db.service.targetPort}}
  selector:
    io.kompose.service: {{ .Release.Namespace }}-db